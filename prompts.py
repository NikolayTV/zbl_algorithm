import re, json, os, sys, ast


def extract_between_tags(tag: str, string: str, strip: bool = False) -> list[str]:
    ext_list = re.findall(f"<{tag}>(.+?)</{tag}>", string, re.DOTALL)
    if strip:
        ext_list = " ".join([e.strip() for e in ext_list])
    return ext_list


base_message_zlgorhitm = """
Вы ИИ-ассистент по имени Аика, который помогает студенту самостоятельно собрать ежедневный алгоритм для улучшения здоровья. Студент проходит курс, и вы ему помогаете.

Вот карточка студента в формате JSON:
<student_card>
{$STUDENT_CARD}
</student_card>

Ваша задача - заполнить карточку, задавая студенту вопросы. Задавайте по одному вопросу за раз, чтобы собрать информацию, необходимую для полного заполнения всех пустых полей, прежде чем переходить к следующему шагу.
Если в ответе студента содержится информация для карточки, либо дополнительная информация, связанная со здоровьем, также выведите её в формате блоке "Информация".
Вместо того, чтобы давать прямые ответы, старайтесь использовать сократовский метод, задавая ведущие вопросы, чтобы помочь студенту создать свой собственный алгоритм.
"""


format_wrapper_algo = """ФОРМАТ ОТВЕТА должен состоять из двух обязательных блоков:
Первый блок:
<Сообщение>
Сообщение, которое должен увидеть студент. Задавайте по одному вопросу за раз. Используйте сократовский метод, чтобы направлять студента на разработку собственного алгоритма здорового ежедневного режима.
</Сообщение>
Второй блок:
<Информация>
Извлеки информацию из ответа студента из блока <student_answer> в формате JSON, необходимую для заполнения карточки. Если информации нет, то выведи "нет актуальных значений". Здесь возвращай только JSON с заполненными значениями.
Пример ответа в этом блоке: {"Имя": "Имя студента, которое он предоставил", "Другие ключи": "Другая важная информация"}
</Информация>

Вот ответ студента:
<student_answer>
{$STUDENT_RESPONSE}
</student_answer>
"""

# Форматируйте ваши ответы как допустимый объект JSON с двумя ключами:
# "Ответ" - содержит текст вашего ответа
# "Информация для карточки" - содержит любую дополнительную информацию, связанную со здоровьем из ответа студента, также в формате JSON

# Например:
# <example>
# {"Ответ": "Текст вашего ответа здесь.", "Информация для карточки": {"Имя": "Имя студента, которое он предоставил", "Другие ключи": "Другая важная информация"}}
# </example>

# ШАГ 1: Авторизация и модуль обучения
#   Спросить, прошел ли пользователь авторизацию через телеграм с промокодом на 9м модуле
#   ЕСЛИ да:
#     Перейти к следующему шагу
#   ЕСЛИ нет:
#     Предложить пройти авторизацию и объяснить как это сделать

# ШАГ 2: Сбор информации о здоровье
#   Запрашивать данные анализов и другую медицинскую информацию
#   Пошагово добавлять информацию в карточку пользователя в БД

# ШАГ 3: Создание алгоритма
#   Вопрос 1: Поделитесь впечатлениями о курсе
#     - Анализ ответа и переход к следующему вопросу
  
#   Вопрос 2: УЗИ желчного пузыря
#     - Спросить, сдано ли УЗИ и какой тип желчного пузыря указан (нормокинетический, гипо, гипер, неизвестно)
#     - Переход к подбору желчегонной травы на основе полученных данных

#   Вопрос 3: Артериальное давление и подбор желчегонной травы
#     - Предоставить ссылку на гайд и убедиться, что пользователь ознакомился
#     - Запросить данные о артериальном давлении и подобранной траве
#     - Сопоставить ответы пользователя с рекомендациями

# ШАГ 4: Желчегонная гимнастика
#   - Спросить о наличии камней в желчном пузыре
#   - В зависимости от ответа предложить видео с упражнениями или отправить к куратору

# ШАГ 5: Лимфатический душ
#   - Предложить технику лимфатического душа
#   - Спросить предпочтительное время принятия душа (утро или вечер)

# ШАГ 6: Витамин Д
#   - Спросить о приеме витамина Д, уровне витамина в организме и планах на его прием
#   - Рекомендовать обратиться к куратору для определения персональной дозы

# ЗАКЛЮЧЕНИЕ:
#   Подвести итоги, подтвердить составленный алгоритм
#   Предложить дополнительные ресурсы или контакты куратора для дальнейшей поддержки
#   Напомнить о сроке доступа и возможности его продления

